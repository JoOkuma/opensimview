package dcamapi;

import org.bridj.Pointer;
import org.bridj.StructObject;
import org.bridj.ann.CLong;
import org.bridj.ann.Field;
import org.bridj.ann.Library;

/**
 * <i>native declaration : lib\dcam\inc\dcamapi.h:541</i><br>
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or
 * <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("dcamapi")
public class DCAM_METADATABLOCK extends StructObject
{
  public DCAM_METADATABLOCK()
  {
    super();
  }

  // / C type : DCAM_METADATABLOCKHDR
  @Field(0)
  public DCAM_METADATABLOCKHDR hdr()
  {
    return this.io.getNativeObjectField(this, 0);
  }

  // / C type : DCAM_METADATABLOCKHDR
  @Field(0)
  public DCAM_METADATABLOCK hdr(final DCAM_METADATABLOCKHDR hdr)
  {
    this.io.setNativeObjectField(this, 0, hdr);
    return this;
  }

  /**
   * [i/o] see below.<br>
   * C type : void*
   */
  @Field(1)
  public Pointer<?> buf()
  {
    return this.io.getPointerField(this, 1);
  }

  /**
   * [i/o] see below.<br>
   * C type : void*
   */
  @Field(1)
  public DCAM_METADATABLOCK buf(final Pointer<?> buf)
  {
    this.io.setPointerField(this, 1, buf);
    return this;
  }

  /**
   * [i/o] see below.<br>
   * C type : long*
   */
  @Field(2)
  public Pointer<CLong> unitsizes()
  {
    return this.io.getPointerField(this, 2);
  }

  /**
   * [i/o] see below.<br>
   * C type : long*
   */
  @Field(2)
  public DCAM_METADATABLOCK unitsizes(final Pointer<CLong> unitsizes)
  {
    this.io.setPointerField(this, 2, unitsizes);
    return this;
  }

  // / [i/o] see below.
  @CLong
  @Field(3)
  public long bytesperunit()
  {
    return this.io.getCLongField(this, 3);
  }

  // / [i/o] see below.
  @CLong
  @Field(3)
  public DCAM_METADATABLOCK bytesperunit(final long bytesperunit)
  {
    this.io.setCLongField(this, 3, bytesperunit);
    return this;
  }

  // / [in] choose userdata kind(File, Session, Frame)
  @CLong
  @Field(4)
  public long userdataKind()
  {
    return this.io.getCLongField(this, 4);
  }

  // / [in] choose userdata kind(File, Session, Frame)
  @CLong
  @Field(4)
  public DCAM_METADATABLOCK userdataKind(final long userdataKind)
  {
    this.io.setCLongField(this, 4, userdataKind);
    return this;
  }

  public DCAM_METADATABLOCK(final Pointer pointer)
  {
    super(pointer);
  }
}
